/*
 * RssBuilderView.java
 */

package rssbuilder;

import org.jdesktop.application.Action;
//import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
//import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

import javax.swing.JOptionPane;
import javax.swing.DefaultListModel;
import java.util.ArrayList;
import java.util.Enumeration;

/**
 * The application's main frame.
 */
public class RssBuilderView extends FrameView {

    public RssBuilderView(SingleFrameApplication app) {
        super(app);

        initComponents();

        itemList.setModel( listModel);
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = RssBuilderApp.getApplication().getMainFrame();
            aboutBox = new RssBuilderAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        RssBuilderApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        channelPanel = new javax.swing.JPanel();
        channelTitleLabel = new javax.swing.JLabel();
        channelTitleTextField = new javax.swing.JTextField();
        channelLinkLabel = new javax.swing.JLabel();
        channelLinkTextField = new javax.swing.JTextField();
        channelDescriptionLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        channelDescriptionTextArea = new javax.swing.JTextArea();
        itemPanel = new javax.swing.JPanel();
        createItemButton = new javax.swing.JButton();
        itemTitleLabel = new javax.swing.JLabel();
        itemTitleTextField = new javax.swing.JTextField();
        itemDescriptionLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemDescriptionTextArea = new javax.swing.JTextArea();
        itemListScrollPane = new javax.swing.JScrollPane();
        itemList = new javax.swing.JList<Item>();
        deleteItemButton = new javax.swing.JButton();
        generateFeedButton = new javax.swing.JButton();
        arduinoPanel = new javax.swing.JPanel();
        arduinoAddressLabel = new javax.swing.JLabel();
        arduinoAddressTextField = new javax.swing.JTextField();
        arduinoPortLabel = new javax.swing.JLabel();
        arduinoPortTextField = new javax.swing.JTextField();
        fileNameTextField = new javax.swing.JTextField();
        fileNameLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(rssbuilder.RssBuilderApp.class).getContext().getResourceMap(RssBuilderView.class);
        mainPanel.setBackground(resourceMap.getColor("mainPanel.background")); // NOI18N
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(620, 737));

        channelPanel.setBackground(resourceMap.getColor("channelDescriptionTextField.background")); // NOI18N
        channelPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("channelDescriptionTextField.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, resourceMap.getFont("channelDescriptionTextField.border.titleFont"))); // NOI18N
        channelPanel.setMinimumSize(new java.awt.Dimension(80, 100));
        channelPanel.setName("channelDescriptionTextField"); // NOI18N

        channelTitleLabel.setFont(resourceMap.getFont("channelNameLabel.font")); // NOI18N
        channelTitleLabel.setText(resourceMap.getString("channelNameLabel.text")); // NOI18N
        channelTitleLabel.setToolTipText(resourceMap.getString("channelNameLabel.toolTipText")); // NOI18N
        channelTitleLabel.setName("channelNameLabel"); // NOI18N

        channelTitleTextField.setFont(resourceMap.getFont("channelTitleTextField.font")); // NOI18N
        channelTitleTextField.setForeground(resourceMap.getColor("channelTitleTextField.foreground")); // NOI18N
        channelTitleTextField.setText(resourceMap.getString("channelTitleTextField.text")); // NOI18N
        channelTitleTextField.setToolTipText(resourceMap.getString("channelTitleTextField.toolTipText")); // NOI18N
        channelTitleTextField.setName("channelTitleTextField"); // NOI18N

        channelLinkLabel.setFont(resourceMap.getFont("channelLinkLabel.font")); // NOI18N
        channelLinkLabel.setText(resourceMap.getString("channelLinkLabel.text")); // NOI18N
        channelLinkLabel.setToolTipText(resourceMap.getString("channelLinkLabel.toolTipText")); // NOI18N
        channelLinkLabel.setName("channelLinkLabel"); // NOI18N

        channelLinkTextField.setFont(resourceMap.getFont("channelLinkTextField.font")); // NOI18N
        channelLinkTextField.setForeground(resourceMap.getColor("channelLinkTextField.foreground")); // NOI18N
        channelLinkTextField.setText(resourceMap.getString("channelLinkTextField.text")); // NOI18N
        channelLinkTextField.setToolTipText(resourceMap.getString("channelLinkTextField.toolTipText")); // NOI18N
        channelLinkTextField.setName("channelLinkTextField"); // NOI18N

        channelDescriptionLabel.setFont(resourceMap.getFont("channelDescriptionLabel.font")); // NOI18N
        channelDescriptionLabel.setLabelFor(channelDescriptionTextArea);
        channelDescriptionLabel.setText(resourceMap.getString("channelDescriptionLabel.text")); // NOI18N
        channelDescriptionLabel.setToolTipText(resourceMap.getString("channelDescriptionLabel.toolTipText")); // NOI18N
        channelDescriptionLabel.setName("channelDescriptionLabel"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        channelDescriptionTextArea.setColumns(20);
        channelDescriptionTextArea.setForeground(resourceMap.getColor("channelDescriptionTextArea.foreground")); // NOI18N
        channelDescriptionTextArea.setRows(5);
        channelDescriptionTextArea.setName("channelDescriptionTextArea"); // NOI18N
        jScrollPane1.setViewportView(channelDescriptionTextArea);

        javax.swing.GroupLayout channelPanelLayout = new javax.swing.GroupLayout(channelPanel);
        channelPanel.setLayout(channelPanelLayout);
        channelPanelLayout.setHorizontalGroup(
            channelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(channelPanelLayout.createSequentialGroup()
                .addGroup(channelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(channelPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(channelDescriptionLabel))
                    .addGroup(channelPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(channelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(channelLinkLabel)
                            .addComponent(channelTitleLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(channelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                    .addComponent(channelTitleTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                    .addComponent(channelLinkTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );
        channelPanelLayout.setVerticalGroup(
            channelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(channelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(channelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(channelTitleLabel)
                    .addComponent(channelTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(channelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(channelLinkLabel)
                    .addComponent(channelLinkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(channelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(channelDescriptionLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        itemPanel.setBackground(resourceMap.getColor("itemPanel.background")); // NOI18N
        itemPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("itemPanel.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, resourceMap.getFont("itemPanel.border.titleFont"), resourceMap.getColor("itemPanel.border.titleColor"))); // NOI18N
        itemPanel.setToolTipText(resourceMap.getString("itemPanel.toolTipText")); // NOI18N
        itemPanel.setName("itemPanel"); // NOI18N

        createItemButton.setText(resourceMap.getString("createItemButton.text")); // NOI18N
        createItemButton.setName("createItemButton"); // NOI18N
        createItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createMessage(evt);
            }
        });

        itemTitleLabel.setFont(resourceMap.getFont("itemTitleLabel.font")); // NOI18N
        itemTitleLabel.setText(resourceMap.getString("itemTitleLabel.text")); // NOI18N
        itemTitleLabel.setName("itemTitleLabel"); // NOI18N

        itemTitleTextField.setForeground(resourceMap.getColor("itemTitleTextField.foreground")); // NOI18N
        itemTitleTextField.setText(resourceMap.getString("itemTitleTextField.text")); // NOI18N
        itemTitleTextField.setToolTipText(resourceMap.getString("itemTitleTextField.toolTipText")); // NOI18N
        itemTitleTextField.setName("itemTitleTextField"); // NOI18N

        itemDescriptionLabel.setFont(resourceMap.getFont("itemDescriptionLabel.font")); // NOI18N
        itemDescriptionLabel.setText(resourceMap.getString("itemDescriptionLabel.text")); // NOI18N
        itemDescriptionLabel.setToolTipText(resourceMap.getString("itemDescriptionLabel.toolTipText")); // NOI18N
        itemDescriptionLabel.setName("itemDescriptionLabel"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        itemDescriptionTextArea.setColumns(20);
        itemDescriptionTextArea.setForeground(resourceMap.getColor("itemDescriptionTextArea.foreground")); // NOI18N
        itemDescriptionTextArea.setRows(5);
        itemDescriptionTextArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemDescriptionTextArea.setName("itemDescriptionTextArea"); // NOI18N
        jScrollPane2.setViewportView(itemDescriptionTextArea);

        itemListScrollPane.setBorder(null);
        itemListScrollPane.setName("itemListScrollPane"); // NOI18N

        itemList.setBackground(resourceMap.getColor("itemList.background")); // NOI18N
        itemList.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("itemList.border.title"))); // NOI18N
        itemList.setFont(resourceMap.getFont("itemList.font")); // NOI18N
        itemList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        itemList.setToolTipText(resourceMap.getString("itemList.toolTipText")); // NOI18N
        itemList.setName("itemList"); // NOI18N
        itemList.setValueIsAdjusting(true);
        itemList.setVisibleRowCount(4);
        itemList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemSelected(evt);
            }
        });
        itemListScrollPane.setViewportView(itemList);

        deleteItemButton.setText(resourceMap.getString("deleteItemButton.text")); // NOI18N
        deleteItemButton.setEnabled(false);
        deleteItemButton.setName("deleteItemButton"); // NOI18N
        deleteItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItem(evt);
            }
        });

        javax.swing.GroupLayout itemPanelLayout = new javax.swing.GroupLayout(itemPanel);
        itemPanel.setLayout(itemPanelLayout);
        itemPanelLayout.setHorizontalGroup(
            itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(createItemButton)
                    .addGroup(itemPanelLayout.createSequentialGroup()
                        .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemDescriptionLabel)
                            .addGroup(itemPanelLayout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(itemTitleLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemTitleTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45)
                .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deleteItemButton)
                    .addComponent(itemListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        itemPanelLayout.setVerticalGroup(
            itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(itemPanelLayout.createSequentialGroup()
                        .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemTitleLabel)
                            .addComponent(itemTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemDescriptionLabel)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(itemListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createItemButton)
                    .addComponent(deleteItemButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        generateFeedButton.setFont(resourceMap.getFont("generateFeedButton.font")); // NOI18N
        generateFeedButton.setText(resourceMap.getString("generateFeedButton.text")); // NOI18N
        generateFeedButton.setToolTipText(resourceMap.getString("generateFeedButton.toolTipText")); // NOI18N
        generateFeedButton.setName("generateFeedButton"); // NOI18N
        generateFeedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateFeed(evt);
            }
        });

        arduinoPanel.setBackground(resourceMap.getColor("arduinoPanel.background")); // NOI18N
        arduinoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("arduinoPanel.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("arduinoPanel.border.titleFont"))); // NOI18N
        arduinoPanel.setName("arduinoPanel"); // NOI18N

        arduinoAddressLabel.setFont(resourceMap.getFont("arduinoAddressLabel.font")); // NOI18N
        arduinoAddressLabel.setText(resourceMap.getString("arduinoAddressLabel.text")); // NOI18N
        arduinoAddressLabel.setName("arduinoAddressLabel"); // NOI18N

        arduinoAddressTextField.setFont(resourceMap.getFont("arduinoAddressTextField.font")); // NOI18N
        arduinoAddressTextField.setForeground(resourceMap.getColor("arduinoAddressTextField.foreground")); // NOI18N
        arduinoAddressTextField.setText(resourceMap.getString("arduinoAddressTextField.text")); // NOI18N
        arduinoAddressTextField.setToolTipText(resourceMap.getString("arduinoAddressTextField.toolTipText")); // NOI18N
        arduinoAddressTextField.setName("arduinoAddressTextField"); // NOI18N

        arduinoPortLabel.setFont(resourceMap.getFont("arduinoPortLabel.font")); // NOI18N
        arduinoPortLabel.setText(resourceMap.getString("arduinoPortLabel.text")); // NOI18N
        arduinoPortLabel.setName("arduinoPortLabel"); // NOI18N

        arduinoPortTextField.setFont(resourceMap.getFont("arduinoPortTextField.font")); // NOI18N
        arduinoPortTextField.setForeground(resourceMap.getColor("arduinoPortTextField.foreground")); // NOI18N
        arduinoPortTextField.setText(resourceMap.getString("arduinoPortTextField.text")); // NOI18N
        arduinoPortTextField.setToolTipText(resourceMap.getString("arduinoPortTextField.toolTipText")); // NOI18N
        arduinoPortTextField.setName("arduinoPortTextField"); // NOI18N

        javax.swing.GroupLayout arduinoPanelLayout = new javax.swing.GroupLayout(arduinoPanel);
        arduinoPanel.setLayout(arduinoPanelLayout);
        arduinoPanelLayout.setHorizontalGroup(
            arduinoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arduinoPanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(arduinoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(arduinoPortLabel)
                    .addComponent(arduinoAddressLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(arduinoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(arduinoPortTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arduinoAddressTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        arduinoPanelLayout.setVerticalGroup(
            arduinoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, arduinoPanelLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(arduinoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arduinoAddressLabel)
                    .addComponent(arduinoAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(arduinoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arduinoPortLabel)
                    .addComponent(arduinoPortTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        fileNameTextField.setText(resourceMap.getString("fileNameTextField.text")); // NOI18N
        fileNameTextField.setName("fileNameTextField"); // NOI18N

        fileNameLabel.setFont(resourceMap.getFont("fileNameLabel.font")); // NOI18N
        fileNameLabel.setText(resourceMap.getString("fileNameLabel.text")); // NOI18N
        fileNameLabel.setToolTipText(resourceMap.getString("fileNameLabel.toolTipText")); // NOI18N
        fileNameLabel.setName("fileNameLabel"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(itemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(channelPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                                .addComponent(fileNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(arduinoPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 221, Short.MAX_VALUE)
                        .addComponent(generateFeedButton)
                        .addGap(18, 18, 18)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileNameLabel)
                    .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generateFeedButton))
                .addGap(18, 18, 18)
                .addComponent(arduinoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(channelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(rssbuilder.RssBuilderApp.class).getContext().getActionMap(RssBuilderView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

private void createMessage(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createMessage

    String itemTitle = itemTitleTextField.getText().trim();
    String itemDescription = itemDescriptionTextArea.getText().trim();
    
    if( itemTitle.length() > 0 && itemDescription.length() > 0 )
    {
        Item tmp = null;
        int currentSelectedItemIndex = itemList.getSelectedIndex();
        
        if( currentSelectedItemIndex >= 0 )
        {
            tmp = listModel.getElementAt( currentSelectedItemIndex );
        }
        else
        {
            tmp = new Item();
        }            
        
        
       tmp.setTitle( itemTitle );
       tmp.setDescription(itemDescription);
        
       if( currentSelectedItemIndex < 0 )
       { 
          listModel.addElement( tmp );
       }
            
        
        createItemButton.setText( "Create");
        itemList.clearSelection();
        clearItemFields();
        
        
        if( ! deleteItemButton.isEnabled())
        {
            deleteItemButton.setEnabled(true );
        }
    }
    else
    {
        JOptionPane.showMessageDialog( null,
                                 "Item Title and Description can not be empty",
                                 "Input Error",JOptionPane.ERROR_MESSAGE);
    }
    
}//GEN-LAST:event_createMessage

private void itemSelected(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemSelected
   int currentSelectedItemIndex = itemList.getSelectedIndex();
   
   if( currentSelectedItemIndex >= 0 )
   {
       Item tmp = listModel.getElementAt( currentSelectedItemIndex );
       itemTitleTextField.setText( tmp.getTitle());
       itemDescriptionTextArea.setText(tmp.getDescription());
       createItemButton.setText( "Update");
       
   }
}//GEN-LAST:event_itemSelected

private void deleteItem(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItem
  int currentSelectedItemIndex = itemList.getSelectedIndex();
  
  if( currentSelectedItemIndex >= 0 )
  {
      listModel.remove( currentSelectedItemIndex);
      clearItemFields();
      itemList.clearSelection();
      
      if( listModel.getSize() == 0 )
      {
          deleteItemButton.setEnabled( false );
          
          
      }
      itemList.clearSelection();
      createItemButton.setText( "Create");
  }
}//GEN-LAST:event_deleteItem

private void generateFeed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateFeed
   String channelTitle = channelTitleTextField.getText().trim();
   String channelLink =  channelLinkTextField.getText().trim();
   String channelDescription = channelDescriptionTextArea.getText().trim();
   String arduinoAddress = arduinoAddressTextField.getText().trim();
   String arduinoPort    = arduinoPortTextField.getText().trim();
   String fileName = fileNameTextField.getText().trim();
   
   if( channelTitle.length() == 0 || channelLink.length() == 0 
      || channelDescription.length() == 0 || arduinoAddress.length() == 0 ||
      arduinoPort.length() == 0 || fileName.length() == 0)
   {
       JOptionPane.showMessageDialog( null,
                     VALIDATION_ERROR,
                     "",JOptionPane.ERROR_MESSAGE);
   }
   else
   {
      Enumeration<Item> tmpItems = listModel.elements();
      ArrayList<Item> tmpItemsList = new ArrayList<Item>();
      
      for(; tmpItems.hasMoreElements();)
      {
          tmpItemsList.add( tmpItems.nextElement());
      }
      
      RssGenerator.generateFeed( tmpItemsList,
                                 fileName,
                                 arduinoAddress,
                                 arduinoPort,
                                 channelTitle,
                                 channelLink,
                                 channelDescription);
   }
}//GEN-LAST:event_generateFeed

private void clearItemFields()
{
  itemTitleTextField.setText("");
  itemDescriptionTextArea.setText("");
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arduinoAddressLabel;
    private javax.swing.JTextField arduinoAddressTextField;
    private javax.swing.JPanel arduinoPanel;
    private javax.swing.JLabel arduinoPortLabel;
    private javax.swing.JTextField arduinoPortTextField;
    private javax.swing.JLabel channelDescriptionLabel;
    private javax.swing.JTextArea channelDescriptionTextArea;
    private javax.swing.JLabel channelLinkLabel;
    private javax.swing.JTextField channelLinkTextField;
    private javax.swing.JPanel channelPanel;
    private javax.swing.JLabel channelTitleLabel;
    private javax.swing.JTextField channelTitleTextField;
    private javax.swing.JButton createItemButton;
    private javax.swing.JButton deleteItemButton;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JTextField fileNameTextField;
    private javax.swing.JButton generateFeedButton;
    private javax.swing.JLabel itemDescriptionLabel;
    private javax.swing.JTextArea itemDescriptionTextArea;
    private javax.swing.JList<Item> itemList;
    private javax.swing.JScrollPane itemListScrollPane;
    private javax.swing.JPanel itemPanel;
    private javax.swing.JLabel itemTitleLabel;
    private javax.swing.JTextField itemTitleTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

    
   
    private final DefaultListModel< Item > listModel = new DefaultListModel<Item>();
    
    private final String VALIDATION_ERROR = "<html><b>Required Fields</b><br><br>File Name<br><br>"
            + "Arduino<ul><li>Address</li><li>Port</li></ul>"
            + "Channel<ul><li>Title</li><li>Link</li><li>Description</li></ul>"
            + "<p>All of the required fields must be provided</p></html>";
    private JDialog aboutBox;
}
